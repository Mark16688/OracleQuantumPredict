import streamlit as st
import joblib
import numpy as np
import pandas as pd
import torch
import torch.nn as nn
import torchvision.transforms as transforms
from PIL import Image

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• Titanic (‡πÉ‡∏ä‡πâ Scikit-learn)
titanic_model = joblib.load("models/titanic_model.pkl")

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• MNIST (‡πÉ‡∏ä‡πâ PyTorch CNN)
class CNN(nn.Module):
    def __init__(self):
        super(CNN, self).__init__()
        self.conv1 = nn.Conv2d(1, 32, kernel_size=3, padding=1)
        self.pool = nn.MaxPool2d(kernel_size=2, stride=2)
        self.conv2 = nn.Conv2d(32, 64, kernel_size=3, padding=1)
        self.flatten = nn.Flatten()
        self.fc1 = nn.Linear(64 * 7 * 7, 128)
        self.fc2 = nn.Linear(128, 10)

    def forward(self, x):
        x = self.pool(torch.relu(self.conv1(x)))
        x = self.pool(torch.relu(self.conv2(x)))
        x = self.flatten(x)
        x = torch.relu(self.fc1(x))
        x = self.fc2(x)
        return x

device = torch.device("cpu")
mnist_model = CNN()
mnist_model.load_state_dict(torch.load("models/mnist_cnn.pth", map_location=device))
mnist_model.eval()

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ UI
st.set_page_config(page_title="AI Prediction Web App", page_icon="ü§ñ", layout="wide")

st.sidebar.title("üîç AI Prediction Web App")
page = st.sidebar.radio(
    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤",
    ["üè† ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å", "üìò About Machine Learning", "üìò About Neural Network", "üìä ML Demo (Titanic)", "ü§ñ NN Demo (MNIST)"]
)

# -------------- ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å --------------
if page == "üè† ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å":
    st.markdown("<h1 style='text-align: center; color: #ff4b4b;'>ü§ñ AI Prediction Web App</h1>", unsafe_allow_html=True)
    st.write("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å Sidebar ‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢")
    
    
    
    
    st.subheader("üìò About Machine Learning")
    st.write("‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Machine Learning ‡πÅ‡∏•‡∏∞ Titanic Dataset ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•, ‡∏ó‡∏§‡∏©‡∏é‡∏µ‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°, ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏î‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£‡πÑ‡∏ó‡∏ó‡∏≤‡∏ô‡∏¥‡∏Ñ")
        
    st.subheader("üìä Machine Learning Demo")
    st.write("‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏• Machine Learning ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å Random Forest, Logistic Regression, ‡πÅ‡∏•‡∏∞ SVM ‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏£‡∏≠‡∏î‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏à‡∏≤‡∏Å‡∏≠‡∏∏‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏´‡∏ï‡∏∏‡πÑ‡∏ó‡∏ó‡∏≤‡∏ô‡∏¥‡∏Ñ")
        
    
    st.subheader("üìò About Neural Network")
    st.write("‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Neural Networks ‡πÅ‡∏•‡∏∞ Convolutional Neural Networks (CNN) ‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ CNN ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏†‡∏≤‡∏û ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏à‡∏î‡∏à‡∏≥‡∏•‡∏≤‡∏¢‡∏°‡∏∑‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡∏¥‡∏á‡∏ã‡πâ‡∏≠‡∏ô")
        

    st.subheader("ü§ñ Neural Network Demo")
    st.write("‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏• CNN ‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ù‡∏∂‡∏Å‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏î‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MNIST ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≠‡∏á‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå")

# -------------- About Machine Learning --------------
elif page == "üìò About Machine Learning":
    st.header("üìò About Machine Learning & Titanic Dataset")
    
    st.subheader("üîß ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤ Machine Learning")
    st.write("""
    ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏• Machine Learning ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Titanic Dataset ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:
    """)

    st.markdown("üìä ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    st.write("""
    - ‡∏•‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ (Missing Values)
    - ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (Categorical Encoding)
    - ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Feature Scaling) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
    """)

    st.markdown("üß† ‡∏ó‡∏§‡∏©‡∏é‡∏µ‡∏Ç‡∏≠‡∏á‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°")
    st.write("""
    ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ô‡∏≥‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ:
    - *Random Forest*: ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°‡∏ú‡∏•‡∏à‡∏≤‡∏Å Decision Trees
    - *Logistic Regression*: ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó (Classification)
    - *Support Vector Machine (SVM)*: ‡πÉ‡∏ä‡πâ‡πÄ‡∏™‡πâ‡∏ô Hyperplane ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    """)

    st.markdown("üèóÔ∏è ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•")
    st.write("""
    1. ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Titanic Dataset
    2. ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Feature ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
    3. ‡πÅ‡∏ö‡πà‡∏á‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô Train/Test Split
    4. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡πÅ‡∏•‡∏∞‡∏ù‡∏∂‡∏Å Train ‡πÇ‡∏°‡πÄ‡∏î‡∏•
    5. ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏ä‡πà‡∏ô Accuracy, Precision, Recall, ‡πÅ‡∏•‡∏∞ F1-score
    """)
    
    st.markdown("### üìÇ Dataset: Titanic Survival")
    st.write("‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£ Titanic ‡πÅ‡∏•‡∏∞‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£‡∏£‡∏≠‡∏î‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà")

    st.markdown("### üìå Feature ‡∏Ç‡∏≠‡∏á Titanic Dataset")
    data = {
        "Feature Name": ["Pclass", "Sex", "Age", "SibSp", "Parch", "Fare", "Embarked"],
        "‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢": [
            "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£ (1st, 2nd, 3rd class)",
            "‡πÄ‡∏û‡∏®‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£ (Male/Female)",
            "‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£",
            "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á/‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏£‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô",
            "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà/‡∏•‡∏π‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô",
            "‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡πã‡∏ß‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£",
            "‡∏ó‡πà‡∏≤‡πÄ‡∏£‡∏∑‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡∏∑‡∏≠ (C = Cherbourg, Q = Queenstown, S = Southampton)"
        ]
    }
    df = pd.DataFrame(data)
    st.table(df)

    st.markdown("### üìÑ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå CSV")
    st.code("Pclass, Sex, Age, SibSp, Parch, Fare, Embarked\n3, Male, 22, 1, 0, 7.25, S\n1, Female, 38, 1, 0, 71.28, C", language="text")

    st.markdown("### üìö ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á")
    st.markdown("""
    - üìå Titanic - Machine Learning from Disaster üîó [Titanic - Machine Learning from Disaster](https://www.kaggle.com/c/titanic)
    - üìå Dataset Titanic - Machine Learning from Disaster üîó(https://www.kaggle.com/c/titanic/data)
    - üìå Scikit-learn Machine Learning in Python üîó [Scikit-learn Machine Learning in Python](https://scikit-learn.org/stable/)
    - üìå TensorFlow Guide üîó [TensorFlow Guide](https://www.tensorflow.org/)
    """)

# -------------- About Neural Network --------------
elif page == "üìò About Neural Network":
    st.markdown("<h1 style='color: #ff9900;'>üìò About Neural Network & MNIST Dataset</h1>", unsafe_allow_html=True)

    st.subheader("üìå ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤ Neural Network")
    st.write("""
    ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏• Neural Network ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö MNIST Dataset ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç 3 ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô
    """)

    st.subheader("üîç ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    st.write("""
    - ‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MNIST ‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏ô‡∏≤‡∏î 28x28 ‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏• ‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô grayscale  
    - ‡∏Ñ‡πà‡∏≤ pixel ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 0-255 ‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å normalize ‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 0-1  
    - ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÑ‡∏î‡πâ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô  
    """)

    st.subheader("üìå ‡∏ó‡∏§‡∏©‡∏é‡∏µ‡∏Ç‡∏≠‡∏á‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°")
    st.write("""
    ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏∑‡∏≠ *Convolutional Neural Network (CNN)* ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏†‡∏≤‡∏û ‡πÇ‡∏î‡∏¢‡∏°‡∏µ‡∏ä‡∏±‡πâ‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡πÄ‡∏ä‡πà‡∏ô:
    - *Conv2D:* ‡πÉ‡∏ä‡πâ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏î‡∏∂‡∏á‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡πÄ‡∏î‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏û  
    - *MaxPooling:* ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå  
    - *Flatten:* ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå  
    - *Dense:* ‡πÉ‡∏ä‡πâ Fully Connected Layer ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞  
    """)

    st.subheader("‚öôÔ∏è ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•")
    st.write("""
    ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏• Neural Network ‡∏°‡∏µ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:
    1. ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MNIST  
    2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• CNN ‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î  
    3. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Activation ‡πÅ‡∏•‡∏∞ Optimizer  
    4. ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Train ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•  
    5. ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•  
    """)

    st.subheader("üìä ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á Dataset")
    st.write("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏µ 60,000 ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ù‡∏∂‡∏Å ‡πÅ‡∏•‡∏∞ 10,000 ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö")

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á Feature ‡∏Ç‡∏≠‡∏á MNIST Dataset
    mnist_table = pd.DataFrame({
        "Feature Name": ["label", "pixel0 - pixel783"],
        "‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢": ["‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (0-9)", "‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡∏≠‡∏á‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏• (0-255)"]
    })
    st.table(mnist_table)

    st.subheader("üìÇ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå CSV")
    st.code("""
    label, pixel0, pixel1, ..., pixel782, pixel783
    5, 0, 0, ..., 159, 253, 255
    """)

    st.subheader("üñºÔ∏è ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û 28x28")
    st.code("""
    mnist_png
    ‚îú‚îÄ‚îÄ training/testing
    ‚îÇ   ‚îú‚îÄ‚îÄ label
    ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ id.png
    """)

    st.subheader("üìö ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á")
    st.markdown("""
    - üìå LeCun, Y., Cortes, C., & Burges, C. (1998). The MNIST database of handwritten digits.
    - üìå Kaggle MNIST Dataset: üîó [Kaggle MNIST Dataset](https://www.kaggle.com/datasets/oddrationale/mnist-in-csv?resource=download)
    - üìå TensorFlow Guide for CNN: üîó [TensorFlow Guide for CNN](https://www.tensorflow.org/tutorials/images/cnn)
    - üìå Keras Documentation for CNN: üîó [Keras Conv2D Layer](https://keras.io/api/layers/convolution_layers/convolution2d/)
    - üìå GitHub MNIST PNG Dataset: üîó [GitHub MNIST PNG Dataset](https://github.com/myleott/mnist_png)
    """)

# -------------- Machine Learning Demo (Titanic) --------------
elif page == "üìä ML Demo (Titanic)":
    st.title("üö¢ Titanic Survival Prediction")

    pclass = st.selectbox("Pclass (‡∏ä‡∏±‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£)", [1, 2, 3])
    sex = st.selectbox("Sex (‡πÄ‡∏û‡∏®)", ["‡∏ä‡∏≤‡∏¢", "‡∏´‡∏ç‡∏¥‡∏á"])
    age = st.slider("Age (‡∏≠‡∏≤‡∏¢‡∏∏)", 0, 100, 30)
    sibsp = st.slider("SibSp (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á/‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏£‡∏™)", 0, 10, 0)
    parch = st.slider("Parch (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡πà‡∏≠‡πÅ‡∏°‡πà/‡∏•‡∏π‡∏Å)", 0, 10, 0)
    fare = st.number_input("Fare (‡∏Ñ‡πà‡∏≤‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£)", 0.0, 500.0, 50.0)
    embarked = st.selectbox("Embarked (‡∏ó‡πà‡∏≤‡πÄ‡∏£‡∏∑‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡∏∑‡∏≠)", ["Cherbourg (C)", "Queenstown (Q)", "Southampton (S)"])

    sex = 0 if sex == "‡∏ä‡∏≤‡∏¢" else 1
    embarked = {"Cherbourg (C)": 0, "Queenstown (Q)": 1, "Southampton (S)": 2}[embarked]

    if st.button("üîç ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•"):
        input_data = np.array([[pclass, sex, age, sibsp, parch, fare, embarked]])
        prediction = titanic_model.predict(input_data)[0]
        result = "‚úÖ ‡∏£‡∏≠‡∏î‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï" if prediction == 1 else "‚ùå ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏î‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï"
        st.success(f"‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: {result}")

# -------------- Neural Network Demo (MNIST) --------------
elif page == "ü§ñ NN Demo (MNIST)":
    st.title("üñºÔ∏è MNIST Handwritten Digit Recognition")

    uploaded_file = st.file_uploader("üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (0-9)", type=["png", "jpg", "jpeg"])

    if uploaded_file is not None:
        img = Image.open(uploaded_file).convert('L')
        img = img.resize((28, 28))
        img_array = np.array(img) / 255.0
        img_tensor = torch.tensor(img_array, dtype=torch.float32).unsqueeze(0).unsqueeze(0).to(device)

        st.image(img, caption="üì∏ ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î", width=150)

        if st.button("üîç ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç"):
            with torch.no_grad():
                prediction = mnist_model(img_tensor)
                predicted_label = torch.argmax(prediction).item()
            st.success(f"‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç: {predicted_label}")